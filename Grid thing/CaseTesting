import static org.junit.Assert.*;

import org.junit.Test;

public class CaseTesting {
public Map map;
	Gui test;
	@Before
	public void BeforeClass(){
		map = new Map(2,2); //builds all road and light instances
		test = new Gui(map.getColumns(), map.getRows(), map);
	}
	
	@Test //light at same location changes
	public void lightChange() {
		map.forceLightRed();
		Light light = (Light) map.getTile(5, 5);
		Light oldLight = new Light(0,0);
		oldLight.setPhase(light.getHorizontalPhase(), light.getVerticalPhase());
		map.lightSwitch(true);
		
		boolean changed = true;
		if(oldLight.getHorizontalPhase() == light.getHorizontalPhase() || oldLight.getVerticalPhase() == light.getVerticalPhase()){
			changed = false;
		}
		
		assertFalse(changed);
	}
	
	@Test
	public void sameLights(){
		Light light1 = (Light) map.getTile(5, 5);
		Light light2 = (Light) map.getTile(5, 17);
		map.lightSwitch(true);
		
		boolean sameLight = false;
		if(light1.getHorizontalPhase() == light2.getHorizontalPhase() && light1.getVerticalPhase() == light2.getVerticalPhase()){
			sameLight = true;
		}
		assertTrue(sameLight);
	}
	
//	2. Verify the traffic light for cars coming in the opposite direction in any junction is the same
	@Test
	public void sameLightPerLine(){
	}

//	4. Verify that no car moves through a red light.
	@Test
	public void redLightRule(){
		
	}
//	5. Verify that the first car waiting at the junction starts moving into the junction only when the light turns green and junction is free of traffic.
	@Test
	public void greenLightRule(){
		
	}
//	6. Verify that no car moves over another car
	@Test (expected = NullPointerException.class)
	public void singleCar() {
		Map map = new Map(1,1);
		/* Create two cars on top of one another: as grid[x][y].isOccupied == true, 
		 * the second car object cannot be created there, leading to a NullPointerException*/
		map.addCar(1, 1, (byte) 0, (byte) 0);
		map.addCar(1, 1, (byte) 0, (byte) 0);
	}
	
		
	}
//	7. Verify the number of cars entering at the beginning of the road is the same as the number of cars exiting at the road.
	@Test
	public void carOut(){			
			
	}
}
